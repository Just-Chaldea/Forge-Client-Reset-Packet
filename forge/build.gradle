plugins {
    id 'eclipse'
    id 'idea'
    id 'maven-publish'
    id 'net.minecraftforge.gradle' version '[6.0,6.2)'
    id 'com.github.johnrengelman.shadow' version "8.1.1"
    id 'org.spongepowered.mixin' version '0.7-SNAPSHOT'
}

version = mod_version
group = mod_group_id
java.toolchain.languageVersion = JavaLanguageVersion.of(17)

base {
    archivesName = mod_name
}

repositories {
    maven {
        name = 'spongepowered-repo'
        url = 'https://repo.spongepowered.org/maven'
    }
}

minecraft {
    mappings channel: mapping_channel, version: mapping_version
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

dependencies {
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"

    compileOnly 'org.spongepowered:mixin:0.8.3-SNAPSHOT'
    compileOnly 'org.spongepowered:mixin:0.8.3-SNAPSHOT:processor'

    annotationProcessor 'org.spongepowered:mixin:0.8.3-SNAPSHOT:processor'
}

def resourceTargets = ['META-INF/mods.toml', 'pack.mcmeta']
def replaceProperties = [
        minecraft_version: minecraft_version, minecraft_version_range: minecraft_version_range,
        forge_version: forge_version, forge_version_range: forge_version_range,
        loader_version_range: loader_version_range,
        mod_id: mod_id, mod_name: mod_name, mod_license: mod_license, mod_version: mod_version,
        mod_authors: mod_authors, mod_description: mod_description
]

processResources {
    inputs.properties replaceProperties
    replaceProperties.put 'project', project

    filesMatching(resourceTargets) {
        expand replaceProperties
    }
}


sourceSets {
    main {
        ext.refMap = "mixins.clientresetpacket.refmap.json"
    }
}

jar {
    manifest.attributes(
            'TweakClass': 'org.spongepowered.asm.launch.MixinTweaker',
            'TweakOrder': 0,
            'MixinConfigs' : "mixins.clientresetpacket.json"
    )
}

mixin {
    add sourceSets.main, "mixins.clientresetpacket.refmap.json"
}

build.finalizedBy('versionedRelease')